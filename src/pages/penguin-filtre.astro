---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <h1 class="text-2xl font-bold mt-6 mb-6 text-gray-800">Penguin avec filtre</h1>
  <nav class="flex gap-6 justify-center mb-8">
    <a href="/" class="font-semibold text-teal-500 hover:text-violet-900 underline decoration-teal-700 decoration-2">Accueil</a>
    <a href="/diamonds-filtre" class="font-semibold text-teal-500 hover:text-violet-900 underline decoration-teal-700 decoration-2">Diamonds</a>
    <a href="/simple-penguin" class="font-semibold text-teal-500 hover:text-violet-900 underline decoration-teal-700 decoration-2">Simple Penguin</a>
    <a href="/penguin-filtre" class="font-semibold text-teal-500 hover:text-violet-900 underline decoration-teal-700 decoration-2">Penguin avec filtre</a>
    <a href="/penguin-multi-filtre" class="font-semibold text-teal-500 hover:text-violet-900 underline decoration-teal-700 decoration-2">Penguin multi-filtres</a>
  </nav>
  <div class="flex items-center gap-4 mb-8">
    <label for="species" class="font-medium text-gray-700">Esp√®ce :</label>
    <select name="species" id="species" class="px-3 py-2 rounded border border-gray-300 bg-white text-base shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-200">
      <option value="">All species</option>
      <option value="Adelie">Adelie</option>
      <option value="Chinstrap">Chinstrap</option>
      <option value="Gentoo">Gentoo</option>
    </select>
  </div>

  <div id="plot" class="border rounded bg-gray-50 p-4 shadow"></div>

  <script type="module">
    import * as Plot from "https://cdn.jsdelivr.net/npm/@observablehq/plot/+esm";
    const selectSpecies = document.getElementById("species");
    const plotDiv = document.getElementById("plot");

    async function renderPlot() {
      const response = await fetch("/assets/penguins.json");
      const penguins = await response.json();

      const species = selectSpecies.value;
      const filtered = species
        ? penguins.filter(p => p.species === species)
        : penguins;

      plotDiv.innerHTML = "";

      const plot = Plot.plot({
        marks: [
          Plot.dot(filtered, {
            x: "culmen_length_mm",
            y: "culmen_depth_mm",
            stroke: "species",
          }),
        ],
      });

      plotDiv.appendChild(plot);
    }

    selectSpecies.addEventListener("change", renderPlot);

    renderPlot();
  </script>

  <style>
    body {
      font-family: 'Inter', Arial, sans-serif;
      background: linear-gradient(to right, #e6fffa, #b2f5ea);
      min-height: 100vh;
    }
    h1 {
      text-align: center;
      font-size: 2rem;
      font-weight: 800;
      color: #134e4a;
      margin-bottom: 2rem;
      text-shadow: 0 2px 8px #0001;
    }
    .flex {
      display: flex;
      align-items: center;
      gap: 1.5rem;
      justify-content: center;
      margin-bottom: 2rem;
    }
    label {
      font-weight: 600;
      color: #319795;
      margin-right: 0.5em;
    }
    select {
      padding: 0.5em 1em;
      border-radius: 0.5em;
      border: 1px solid #81e6d9;
      background: #fff;
      font-size: 1rem;
      box-shadow: 0 2px 8px #0001;
      transition: border 0.2s;
    }
    select:focus {
      border-color: #319795;
      outline: none;
    }
    nav {
      margin-bottom: 2rem;
    }
    nav a {
      font-weight: 600;
      color: #319795;
      text-decoration: underline;
      text-underline-offset: 3px;
      transition: color 0.2s;
      padding: 0.3em 0.7em;
      border-radius: 4px;
    }
    nav a:hover {
      color: #6d28d9;
      background: #e6f2ff;
    }
    #plot {
      margin: 0 auto;
      margin-top: 2rem;
      border: 1px solid #bee3f8;
      padding: 2rem;
      background: #fff;
      border-radius: 1rem;
      box-shadow: 0 4px 16px #0001;
      max-width: 700px;
    }
  </style>
</Layout>